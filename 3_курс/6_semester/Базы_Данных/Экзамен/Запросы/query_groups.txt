group: DB 

S = {
Snum:string, Snam:string, St:number, Ci:string
S8, Vladimir, 30, Tomsk
S2, Nikolai, 50, Asino
S5, Konstantin, 100, Yaya
S4, Petr, 20, Rio-de-Janeiro
S3, Grigoriy, 80, Yaya
S9, Egor, 100, Yaya
S7, Sergey, 90, Asino
S1, Ivan, 100, Tomsk
S6, Ivan, 100, Lesoto
}

P = {
Pnum:string, Pnam:string, We:number, Co:string, Ci:string
P1, korpus, 300, white, Tomsk
P2, raziem, 3, black, Yaya
P3, knopka, 5, red, Tomsk
P4, korpus, 800, blue, Lesoto
P5, panel, 100, gray, Asino
P6, kineskop, 1200, black, Yaya
P7, knopka, 10, orange, Asino
P8, panel, 450, pink, Asino
P9, lamp, 1, red, Tomsk
}

J = {
Jnum:string, Jnam:string, Ci:string
J1, processor, Asino
J10, display, Yaya
J2, klava, Yaya
J3, display, Tomsk
J4, printer, Sayanogorsk
J5, processor, Yaya
J6, klava, Tomsk
J7, mouse, Lesoto
J8, joystick, London
J9, winchester, Rio-de-Janeiro
}

SPJ = {
S.Snum:string, P.Pnum:string, J.Jnum:string, Qt:number
S1, P1, J3, 100
S8, P3, J6, 100
S4, P4, J1, 130
S8, P9, J2, 150
S3, P4, J8, 150
S2, P9, J4, 200
S1, P2, J5, 200
S8, P7, J6, 200
S6, P8, J9, 300
S8, P1, J1, 400
S5, P3, J8, 400
S2, P3, J7, 500
S3, P9, J9, 600
S7, P3, J2, 1000
S1, P2, J3, 1000
S7, P6, J1, 2800
S8, P1, J6, 2200
S7, P8, J2, 2500
S6, P5, J9, 2800
}


------------------------------------------------------------------
DROP TABLE SPJ;
DROP TABLE J;
DROP TABLE P; 
DROP TABLE S;
------------------------------------------------------------------
Дана следующая база данных написанная на языке SQL:
CREATE TABLE J(
    Jnum varchar(255) PRIMARY KEY,
    Jnam varchar(255),
    Ci varchar(255)
);
CREATE TABLE P(
    Pnum varchar(255) PRIMARY KEY,
    Pnam varchar(255),
    We int,
    Co varchar(255),
    Ci varchar(255)
);
CREATE TABLE S(
    Snum varchar(255) PRIMARY KEY,
    Snam varchar(255),
    St int,
    Ci varchar(255)
);
CREATE TABLE SPJ(
    Snum varchar(255),
    Pnum varchar(255),
    Jnum varchar(255),
    Qt int,
    FOREIGN KEY (Snum) REFERENCES s(snum),
    FOREIGN KEY (Pnum) REFERENCES p(pnum),
    FOREIGN KEY (Jnum) REFERENCES j(jnum)
);

где S - поставщик,
P - деталь,
J - изделие, 
SPJ - поставка,
Snum - номер поставщика,
Snam - наименование поставщика,
St - статус поставщика,
Ci - город поставщика;

Pnum - номер детали,
Pnam - наименование детали,
Co - цвет детали,
We - вес детали,
Ci - город детали;

Jnum - номер изделия,
Jnam - наименование изделия,
Ci - город изделия;

Qt - объём поставки.

А также следующие данные:

INSERT INTO S (Snum, Snam, St, Ci)
VALUES
    ('S8', 'Владимир', 30, 'Томск'),
    ('S2', 'Николай', 50, 'Асино'),
    ('S5', 'Константин', 100, 'Яя'),
    ('S4', 'Петр', 20, 'Рио-де-Жанейро'),
    ('S3', 'Григорий', 80, 'Yaya'),
    ('S9', 'Егор', 100, 'Яя'),
    ('S7', 'Сергей', 90, 'Асино'),
    ('S1', 'Иван', 100, 'Томск'),
    ('S6', 'Иван', 100, 'Лесото');
INSERT INTO P (Pnum, Pnam, We, Co, Ci)
VALUES
	('P1', 'корпус', 300, 'белый', 'Томск'),
    ('P2', 'разъём', 3, 'чёрный', 'Яя'),
    ('P3', 'кнопка', 5, 'красный', 'Томск'),
    ('P4', 'корпус', 800, 'синий', 'Лесото'),
    ('P5', 'панель', 100, 'серый', 'Асино'),
    ('P6', 'кинескоп', 1200, 'чёрный', 'Яя'),
    ('P7', 'кнопка', 10, 'оранжевый', 'Асино'),
    ('P8', 'панель', 450, 'розовый', 'Асино'),
    ('P9', 'лампа', 1, 'красный', 'Томск');
INSERT INTO J (Jnum, Jnam, Ci)
VALUES
	('J1', 'процессор', 'Асино'),
    ('J10', 'дисплей', 'Яя'),
    ('J2', 'клавиатура', 'Яя'),
    ('J3', 'дисплей', 'Томск'),
    ('J4', 'принтер', 'Саяногорск'),
    ('J5', 'процессор', 'Яя'),
    ('J6', 'клавиатура', 'Томск'),
    ('J7', 'мышь', 'Лесото'),
    ('J8', 'джостик', 'Лондон'),
    ('J9', 'винчестер', 'Рио-де-Жанейро');
INSERT INTO SPJ (Snum, Pnum, Jnum, Qt)
VALUES 
	('S1', 'P1', 'J3', 100),
    ('S8', 'P3', 'J6', 100),
    ('S4', 'P4', 'J1', 130),
    ('S8', 'P9', 'J2', 150),
    ('S3', 'P4', 'J8', 150),
    ('S2', 'P9', 'J4', 200),
    ('S1', 'P2', 'J5', 200),
    ('S8', 'P7', 'J6', 200),
    ('S6', 'P8', 'J9', 300),
    ('S8', 'P1', 'J1', 400),
    ('S5', 'P3', 'J8', 400),
    ('S2', 'P3', 'J7', 500),
    ('S3', 'P9', 'J9', 600),
    ('S7', 'P3', 'J2', 1000),
    ('S1', 'P2', 'J3', 1000),
    ('S7', 'P6', 'J1', 2800),
    ('S8', 'P1', 'J6', 2200),
    ('S7', 'P8', 'J2', 2500),
    ('S6', 'P5', 'J9', 2800);
    
Запомни следующие правила запросов SELECT:
Запросы писать в упрощённом виде.
JOIN осуществлять сразу в операторе FROM через запятую.
В проекции результата переименования не осуществлять.
В качестве оператора сравнения '<>' использовать оператор NOT.
---------------------------------------
Теперь напиши правильный запрос к этой базе данных в упрощённом виде. 
JOIN осуществляй сразу в операторе FROM через запятую.
В проекции результата переименования не осуществляй.
Формулировка запроса выглядит следующим образом:

Найти все такие тройки значений "номер поставщика, номер детали, номер изделия", для которых указанные поставщик, деталь и изделие находятся в одном городе

